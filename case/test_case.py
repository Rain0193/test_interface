# -*- coding:utf-8 -*-
'''
Created on 2017年5月5日
@author: lt
'''
import  unittest
from Common import WriteExcel
import Common.Path
from Exception import Custom_exception
from Common import getdb
from bson.objectid import ObjectId
# 测试用例(组)类
class ParametrizedTestCase(unittest.TestCase):
    """ TestCase classes that want to be parametrized should
        inherit from this class.
    """
    def __init__(self, methodName='runTest', url=None, http=None, data=None, host=None,case_id=None,code=None,case_desc=None,expect_http=None):
        super(ParametrizedTestCase, self).__init__(methodName)
        self.url = url
        self.http = http
        self.data = data
        self.host = host
        self.case_id=case_id
        self.code=code
        self.case_desc=case_desc
        self.expect_http=expect_http
class TestInterfaceCase(ParametrizedTestCase):
    def setUp(self):
        pass
    #正确注册
    def test_user_register(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #输入已注册过的手机号能否注册
    def test_user_register_exist_account(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #输入错误的验证码能否注册
    def test_user_register_wrong_code(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #验证码登录
    def test_user_login_code(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #输入未注册的手机号能否登录
    def test_user_login_code_noexist_account(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #输入错误的验证码能否登录
    def test_user_login_code_wrong_code(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #密码登录
    def test_user_login_pwd(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #输入未注册的手机号能否登录
    def test_user_login_pwd_noexist_account(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #输入已注册的手机号和错误的密码能否登录
    def test_user_login_pwd_wrong_pwd(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #第三方登录QQ
    def test_user_login_other_QQ(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #第三方登录wx
    def test_user_login_other_wx(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #第三方登录QQ传递非必传参数，系统的实现情况
    def test_user_login_other_QQ_nomust_parameter(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取用户详情
    def test_user_info(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取用户详情token与accountId对应非同一用户
    def test_user_info_different_token_accountId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取用户详情token存在，accountId不存在
    def test_user_info_by_token(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取导师列表
    def test_user_teacher_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取导师列表传token
    def test_user_teacher_list_by_token(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取第二页导师列表
    def test_user_teacher_list_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取导师列表，不传pageNum和pageSize
    def test_user_teacher_list_no_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改用户头像
    def test_user_info_update_images(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        files = {'cover': open(Common.Path.photo_Path(), 'rb')}
        response,state = self.http.post(self.url, self.data, self.host, files)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改用户昵称
    def test_user_info_update_nikeName(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改用户签名
    def test_user_info_update_description(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改用户性别
    def test_user_info_update_sex(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #同时修改所有用户个人资料
    def test_user_info_update_all(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改用户性别，传入不符合的数据
    def test_user_info_update_wrong_sex(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #设置密码
    def test_user_pwd_set(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #设置密码输入超过16位
    def test_user_pwd_set_out_sixteen(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #设置密码输入少于6位
    def test_user_pwd_set_in_six(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #设置密码参数缺少token
    def test_user_pwd_set_no_token(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #验证码修改密码输入超过16位
    def test_user_pwd_out_sixteen_update_code(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #验证码修改密码输入少于6位
    def test_user_pwd_in_six_update_code(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #验证码修改密码
    def test_user_pwd_update_code(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #验证码修改密码参数缺少token
    def test_user_pwd_update_code_no_token(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #找回密码
    def test_user_pwd_find(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #通过原密码修改密码
    def test_user_pwd_update_by_original_password(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #原密码输入错误
    def test_user_pwd_update_by_wrong_original_password(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新密码为5位字符
    def test_user_pwd_update_by_five_pwd(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新密码为17位字符
    def test_user_pwd_update_by_seventeen_pwd(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #第三方登录绑定手机输入10位手机号
    def test_user_phone_update_by_tenphone(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #第三方登录绑定手机输入12位手机号
    def test_user_phone_update_by_twelvephone(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #第三方登录绑定手机输入错误的验证码
    def test_user_phone_update_wrong_code(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #第三方登录绑定手机
    def test_user_phone_update(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #第三方登录已绑定手机号能否直接绑定
    def test_user_phone_update_pass(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #已绑定手机用户更换手机
    def test_user_phone_reset(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取收货地址列表
    def test_user_address_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加收货地址
    def test_user_address_add(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加收货地址参数中缺少token
    def test_user_address_add_no_token(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加收货地址参数无对应的用户
    def test_user_address_add_no_account(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加收货地址参数超过传递上线
    def test_user_address_add_out_norm(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加收货地址参数为空
    def test_user_address_add_no_parameter(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改收货地址
    def test_user_address_update(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改收货地址参数中缺少token
    def test_user_address_update_no_token(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改收货地址参数无对应的用户
    def test_user_address_update_no_account(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改收货地址参数超过传递上线
    def test_user_address_update_out_norm(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改收货地址参数为空
    def test_user_address_update_no_parameter(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改不存在的收货地址
    def test_user_address_update_noexist(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除收货地址
    def test_user_address_del(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除不存在的收货地址
    def test_user_address_del_noexist(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取讲堂列表
    def test_forum_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取讲堂列表分页显示
    def test_forum_list_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取讲堂列表传入token
    def test_forum_list_by_token(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取讲堂基本详情
    def test_forum_detail(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取讲堂基本详情传入token
    def test_forum_detail_by_token(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取讲堂基本详情传入不存在的讲堂id
    def test_forum_detail_noexist_forumId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取讲堂课程列表
    def test_course_list_by_forum(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取讲堂课程列表分页显示
    def test_course_list_by_forum_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取讲堂课程列表传入不存在的讲堂id
    def test_course_list_by_forum_noexist_forumId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取导师课程列表
    def test_course_list_by_teacher(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取导师课程列表分页显示
    def test_course_list_by_teacher_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取导师课程列表出入不存在的导师id
    def test_course_list_by_teacher_noexist_teacherId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取我的课程列表
    def test_course_list_by_watch(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取我的课程列表分页显示
    def test_course_list_by_watch_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取我的课程列表传入不存在的token
    def test_course_list_by_watch_noexist_token(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取课程详情
    def test_course_detail(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取课程详情传入token
    def test_course_detail_by_token(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取课程详情传入不存在的课程
    def test_course_detail_by_noexist_courseId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取课程大纲
    def test_course_syllabus(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取课程大纲传入不存在的课程
    def test_course_syllabus_noexist_courseId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取直播详情
    def test_item_live_detail(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取直播详情传入token
    def test_item_live_detail_by_token(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取直播详情参数缺少courseId
    def test_item_live_detail_no_courseId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取直播详情传入不存在的courseId
    def test_item_live_detail_noexist_courseId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取直播详情传入不存在的liveId
    def test_item_live_detail_noexist_liveId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取录播课时视频详情
    def test_item_vod_detail_video(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取录播课时音频详情
    def test_item_vod_detail_sound(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取录播课时文本详情
    def test_item_vod_detail_text(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #查询最新版本号
    def test_common_new(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #点播视频播放次数增加
    def test_ondemand_add_video(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #点播音频播放次数增加
    def test_ondemand_add_sound(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #点播文本播放次数增加
    def test_ondemand_add_text(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #直播观看记录增加
    def test_live_add(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #直播观看记录减少
    def test_live_del(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取视频播放记录
    def test_play_recode_detail_video(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取音频播放记录
    def test_play_recode_detail_sound(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取文本播放记录
    def test_play_recode_detail_text(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户查看二维码
    def test_qrcode_detail(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取系统消息列表
    def test_system_message_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取系统消息列表分页显示
    def test_system_message_list_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取系统消息详情
    def test_system_message_detail(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #判断是否有未读消息
    def test_system_message_unread_exist(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除系统消息
    def test_system_message_del(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #地域列表
    def test_region_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取热门地域列表
    def test_region_hot_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取内置静态页面
    def test_templet_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #上传head图片
    def test_img_upload_by_head(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #广告列表
    def test_ad_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #广告详情
    def test_ad_details(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #生成讲堂授信码
    def test_creditcode_add_forum(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #生成课程授信码
    def test_creditcode_add_course(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #生成直播授信码
    def test_creditcode_add_live(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #验证授信码
    def test_creditcode_validate(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #生成讲堂订单
    def test_order_add_forum(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #生成课程订单
    def test_order_add_course(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #生成优惠券订单
    def test_order_add_couponpackage(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #生成豆豆套餐订单
    def test_order_add_mbeanpackage(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #所有订单列表
    def test_order_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #所有订单列表分页显示
    def test_order_list_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #所有成功订单列表
    def test_order_list_by_success(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取课程订单列表
    def test_order_course_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取课程订单列表分页显示
    def test_order_course_list_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取课程成功订单列表
    def test_order_course_list_by_success(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取讲堂订单列表
    def test_order_forum_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取讲堂订单列表分页显示
    def test_order_forum_list_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取讲堂成功订单列表
    def test_order_forum_list_by_success(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取优惠券订单列表
    def test_order_couponpackage_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取优惠券订单列表分页显示
    def test_order_couponpackage_list_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取成功的优惠券订单列表
    def test_order_couponpackage_list_by_success(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取豆豆套餐订单列表
    def test_order_mbeanpackage_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取豆豆套餐订单列表分页显示
    def test_order_mbeanpackage_list_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取成功的豆豆套餐订单列表
    def test_order_mbeanpackage_list_by_success(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取订单详情
    def test_order_detail(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除订单（逻辑删除）
    def test_order_del(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #支付前选择优惠券
    def test_order_selectcoupon(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #支付前选择支付方式
    def test_order_selectpaychannels(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #豆豆支付
    def test_payorder_mbpay(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #微信支付
    def test_payorder_wechat(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #支付宝支付
    def test_payorder_alipay(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #支付方式列表
    def test_paychannels_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #系统发放优惠券套餐列表
    def test_coupon_grantlist(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #系统发放优惠券套餐详情
    def test_coupon_grantdetail(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #优惠券套餐商品列表
    def test_coupon_selllist(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #优惠券套餐商品详情
    def test_coupon_selldetail(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户参与抽取系统发放的优惠券套餐
    def test_coupon_sysgrant_add(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户参与抽取班主任发放的优惠券套餐
    def test_coupon_teachergrant_add(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户已获得优惠券列表
    def test_coupon_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户优惠券详情
    def test_coupon_detail(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #班主任优惠券套餐列表
    def test_coupon_teacher_packages_list1(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #班主任优惠券套餐详情
    def test_coupon_teacher_package_detail(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #班主任优惠券套餐发放记录列表
    def test_coupon_grantrecord_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #班主任发放优惠券套餐
    def test_coupon_grantpackages(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #报名列表信息
    def test_enroll_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #报名列表信息分页显示
    def test_enroll_list_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #报名信息详情
    def test_enroll_detail(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户报名
    def test_enroll_add(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #更新报名信息使用状态
    def test_enroll_update(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #取消报名信息
    def test_enroll_del(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #虚拟账户信息
    def test_virtual_info(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增虚拟账户信息
    def test_virtual_add(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #虚拟账户流水记录信息列表
    def test_flowrecord_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #虚拟账户流水记录信息列表分页显示
    def test_flowrecord_list_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #虚拟账户交易记录信息详情
    def test_flowrecord_detail(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取用户列表
    def test_user_user_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取用户列表按省份查找
    def test_user_user_list_admin_by_province(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取用户列表按城市查找
    def test_user_user_list_admin_by_cityId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取用户列表按县查找
    def test_user_user_list_admin_by_area(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取用户列表按用户ID精确查找
    def test_user_user_list_admin_by_accountId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取用户列表page参数传递为空
    def test_user_user_list_admin_by_nopage(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取用户列表page参数传递为负数
    def test_user_user_list_admin_by_minus_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取用户列表page参数传递为非整型
    def test_user_user_list_admin_by_not_int(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户基本详情
    def test_user_user_info_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户基本详情传入不存在的用户id
    def test_user_user_info_admin_by_no_accountId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #禁用用户
    def test_user_user_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #启用用户
    def test_user_user_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #导师列表
    def test_user_teacher_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #导师列表按省份查找
    def test_user_teacher_list_admin_by_province(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #导师列表按城市查找
    def test_user_teacher_list_admin_by_cityId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #导师列表按县查找
    def test_user_teacher_list_admin_by_area(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #导师列表按用户ID精确查找
    def test_user_teacher_list_admin_by_accountId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #导师列表按导师姓名查找
    def test_user_teacher_list_admin_by_name(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增导师
    def test_user_teacher_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        files = {'cover': open(Common.Path.photo_Path(), 'rb')}
        response,state = self.http.post(self.url, self.data, self.host, files)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("accountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增导师无导师简介
    def test_user_teacher_add_admin_no_description(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        files = {'cover': open(Common.Path.photo_Path(), 'rb')}
        response,state = self.http.post(self.url, self.data, self.host, files)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("accountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增导师，导师姓名超过参数传递上限
    def test_user_teacher_add_admin_out_realname(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        files = {'cover': open(Common.Path.photo_Path(), 'rb')}
        response,state = self.http.post(self.url, self.data, self.host, files)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("accountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增导师，导师姓名为空
    def test_user_teacher_add_admin_no_realname(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        files = {'cover': open(Common.Path.photo_Path(), 'rb')}
        response,state = self.http.post(self.url, self.data, self.host, files)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("accountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增导师，手机号为空
    def test_user_teacher_add_admin_no_phone(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        files = {'cover': open(Common.Path.photo_Path(), 'rb')}
        response,state = self.http.post(self.url, self.data, self.host, files)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("accountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增导师，手机号已注册
    def test_user_teacher_add_admin_exist_phone(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("accountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增导师，头像图片传递为空
    def test_user_teacher_add_admin_no_cover(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        files = {'cover': open(Common.Path.photo_Path(), 'rb')}
        response,state = self.http.post(self.url, self.data, self.host, files)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("accountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增导师，性别传递不符合参数类型
    def test_user_teacher_add_admin_error_sex(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        files = {'cover': open(Common.Path.photo_Path(), 'rb')}
        response,state = self.http.post(self.url, self.data, self.host, files)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("accountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增导师，可用状态不符合参数类型
    def test_user_teacher_add_admin_error_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("accountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #导师基本详情
    def test_user_teacher_info_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增后台用户
    def test_root_user_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("adminAccountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增后台用户包含头像且简介为空
    def test_root_user_add_admin_file(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        files = {'cover': open(Common.Path.photo_Path(), 'rb')}
        response,state = self.http.post(self.url, self.data, self.host, files)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("adminAccountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增后台用户，account为空
    def test_root_user_add_admin_no_account(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("adminAccountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增后台用户，account错误的格式
    def test_root_user_add_admin_error_account(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("adminAccountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增后台用户，account已存在
    def test_root_user_add_admin_exist_account(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("adminAccountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增后台用户，真实姓名为空
    def test_root_user_add_admin_no_realname(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("adminAccountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增后台用户，真实姓名参数超过传递上限
    def test_root_user_add_admin_out_realname(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("adminAccountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增后台用户，联系手机号为空
    def test_root_user_add_admin_no_phone(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("adminAccountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增后台用户，联系手机号格式错误
    def test_root_user_add_admin_error_phone(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("adminAccountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增后台用户，sex传递不符合参数类型
    def test_root_user_add_admin_error_sex(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("adminAccountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增后台用户，sex为空
    def test_root_user_add_admin_no_sex(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("adminAccountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增后台用户，可用状态传递不符合参数类型
    def test_root_user_add_admin_error_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("adminAccountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增后台用户，可用状态传递为空
    def test_root_user_add_admin_no_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("adminAccountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增后台用户，角色id为空
    def test_root_user_add_admin_no_roldId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("adminAccountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增后台用户，角色id不存在
    def test_root_user_add_admin_inexistence_roldId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("adminAccountDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #后台用户登录
    def test_root_login_pwd_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #后台用户登录传入浏览器信息
    def test_root_login_pwd_admin_by_explorer(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #后台用户修改密码
    def test_root_update_pwd_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #后台用户修改密码时，原密码错误
    def test_root_update_pwd_admin_wrong_oldPwd(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #后台用户修改密码时，新密码为5位数
    def test_root_update_pwd_admin_five_newPwd(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #后台用户修改密码时，新密码为17位数
    def test_root_update_pwd_admin_seventeen_newPwd(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #后台用户修改密码时，验证码错误
    def test_root_update_pwd_admin_error_code(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #后台用户列表
    def test_root_user_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #后台用户列表按关键字搜索
    def test_root_user_list_admin_by_keyWord(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #后台用户列表按开始时间搜索
    def test_root_user_list_admin_by_StartTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #后台用户列表按结束时间搜索
    def test_root_user_list_admin_by_endTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #后台用户列表按可用状态搜索
    def test_root_user_list_admin_by_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #后台用户列表参数缺少pageNum和pageSize
    def test_root_user_list_admin_by_no_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #后台用户列表结束时间早于开始时间
    def test_root_user_list_admin_by_error_Time(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #后台用户列表,status传递参数类型错误
    def test_root_user_list_admin_by_error_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #后台用户详情
    def test_root_user_info_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #后台用户详情,account不存在
    def test_root_user_info_admin_inexistence_account(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #后台用户权限
    def test_root_user_auth_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #后台用户权限,account不存在
    def test_root_user_auth_admin_inexistence_account(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取后台用户
    def test_root_user_session_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增角色
    def test_role_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增角色缺少description
    def test_role_add_admin_no_desc(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增角色缺少rolename
    def test_role_add_admin_no_rolename(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增角色权限名称41个字符
    def test_role_add_admin_out_rolename(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加用户
    def test_role_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加的用户不存在
    def test_role_update_admin_inexistence_account(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #角色详情
    def test_role_info_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #角色详情,roleId不存在
    def test_role_info_admin_inexistence_releId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #角色列表
    def test_role_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除角色
    def test_role_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除的角色不存在
    def test_role_del_admin_inexistence_releId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增权限资源
    def test_menu_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增父级权限资源
    def test_menu_add_admin_by_parentId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增包含访问地址的权限资源
    def test_menu_add_admin_by_menuUrl(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增包含描述的权限资源
    def test_menu_add_admin_by_description(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增权限资源名称为41个字符
    def test_menu_add_admin_out_menuName(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增权限资源type传递不符合数据类型
    def test_menu_add_admin_error_type(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除权限资源
    def test_menu_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除的权限资源不存在
    def test_menu_del_admin_inexistence_menuId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改权限资源
    def test_menu_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #权限资源详情
    def test_menu_info_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #权限资源列表
    def test_menu_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增讲堂
    def test_forum_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂包含标签和地域
    def test_forum_add_admin_by_label_region(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂标题为空
    def test_forum_add_admin_by_no_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂标题为41个字符
    def test_forum_add_admin_by_out_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂描述为空
    def test_forum_add_admin_by_no_desc(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂讲堂排序索引为负数
    def test_forum_add_admin_by_minus_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂讲堂排序索引为小数
    def test_forum_add_admin_by_decimals_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂讲堂排序索引为非数字
    def test_forum_add_admin_by_error_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂讲堂排序索引为空
    def test_forum_add_admin_by_no_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂购买有效期为负数
    def test_forum_add_admin_by_minus_effectiveDays(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂购买有效期为小数
    def test_forum_add_admin_by_decimals_effectiveDays(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂购买有效期为非数字
    def test_forum_add_admin_by_error_effectiveDays(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂购买有效期为空
    def test_forum_add_admin_by_no_effectiveDays(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂原价为负数
    def test_forum_add_admin_by_minus_originalPrice(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂原价为非数字
    def test_forum_add_admin_by_error_originalPrice(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂原价为空
    def test_forum_add_admin_by_no_originalPrice(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂现价为负数
    def test_forum_add_admin_by_minus_price(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂现价为非数字
    def test_forum_add_admin_by_error_price(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂现价为空
    def test_forum_add_admin_by_no_price(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增讲堂传入status不符合数据类型
    def test_forum_add_admin_by_error_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("forumDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #删除讲堂
    def test_forum_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除的讲堂不存在
    def test_forum_del_admin_inexistence_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除的讲堂，传入的isLogic不符合数据类型
    def test_forum_del_admin_error_isLogic(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂
    def test_forum_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂包含标签和地域
    def test_forum_update_admin_by_label_region(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂标题为空
    def test_forum_update_admin_by_no_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂标题为41个字符
    def test_forum_update_admin_by_out_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂描述为空
    def test_forum_update_admin_by_no_desc(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂讲堂排序索引为负数
    def test_forum_update_admin_by_minus_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂讲堂排序索引为小数
    def test_forum_update_admin_by_decimals_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂讲堂排序索引为非数字
    def test_forum_update_admin_by_error_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂讲堂排序索引为空
    def test_forum_update_admin_by_no_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂购买有效期为负数
    def test_forum_update_admin_by_minus_effectiveDays(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂购买有效期为小数
    def test_forum_update_admin_by_decimals_effectiveDays(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂购买有效期为非数字
    def test_forum_update_admin_by_error_effectiveDays(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂购买有效期为空
    def test_forum_update_admin_by_no_effectiveDays(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂原价为负数
    def test_forum_update_admin_by_minus_originalPrice(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂原价为非数字
    def test_forum_update_admin_by_error_originalPrice(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂原价为空
    def test_forum_update_admin_by_no_originalPrice(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂现价为负数
    def test_forum_update_admin_by_minus_price(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂现价为非数字
    def test_forum_update_admin_by_error_price(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂现价为空
    def test_forum_update_admin_by_no_price(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改讲堂传入status不符合数据类型
    def test_forum_update_admin_by_error_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改的讲堂id不存在
    def test_forum_update_admin_by_inexistence_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #讲堂列表
    def test_forum_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #id搜索讲堂列表
    def test_forum_list_admin_by_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #key搜索讲堂列表
    def test_forum_list_admin_by_key(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #startTime搜索讲堂列表
    def test_forum_list_admin_by_startTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #endTime搜索讲堂列表
    def test_forum_list_admin_by_endTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #分页显示讲堂列表
    def test_forum_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按cityId搜索讲堂列表
    def test_forum_list_admin_by_cityId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按status搜索讲堂列表
    def test_forum_list_admin_by_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按时间搜索讲堂列表，结束时间早于开始时间
    def test_forum_list_admin_by_error_time(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按status搜索讲堂列表,status传入不符合的数据类型
    def test_forum_list_admin_by_error_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #讲堂详情
    def test_forum_detail_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #讲堂详情,forumId不存在
    def test_forum_detail_admin_inexistence_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程
    def test_course_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程标题为空
    def test_course_add_admin_no_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程标题为41个字符
    def test_course_add_admin_out_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程描述为空
    def test_course_add_admin_no_desc(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程导师id为空
    def test_course_add_admin_no_teacherId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程导师id不存在
    def test_course_add_admin_inexistence_teacherId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程购买有效期为负数
    def test_course_add_admin_minus_effectiveDays(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程购买有效期为小数
    def test_course_add_admin_decimals_effectiveDays(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程购买有效期为非数字
    def test_course_add_admin_error_effectiveDays(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程购买有效期为空
    def test_course_add_admin_no_effectiveDays(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程原价为负数
    def test_course_add_admin_minus_originalPrice(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程原价为非数字
    def test_course_add_admin_decimals_originalPrice(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程原价为空
    def test_course_add_admin_no_originalPrice(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程现价为负数
    def test_course_add_admin_minus_price(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程现价为非数字
    def test_course_add_admin_error_price(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程现价为空
    def test_course_add_admin_no_price(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程status传入不符合的数据类型
    def test_course_add_admin_error_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程status为空
    def test_course_add_admin_no_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程排序为负数
    def test_course_add_admin_minus_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程排序为小数
    def test_course_add_admin_decimals_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程排序为非数字
    def test_course_add_admin_error_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程排序为空
    def test_course_add_admin_no_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程地域为空
    def test_course_add_admin_no_region(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程地域id不存在
    def test_course_add_admin_inexistence_region(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程标签id为空
    def test_course_add_admin_no_label(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增课程标签id不存在
    def test_course_add_admin_inexistence_label(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #修改课程
    def test_course_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程标题为空
    def test_course_update_admin_no_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程标题为41个字符
    def test_course_update_admin_out_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程描述为空
    def test_course_update_admin_no_desc(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程导师id为空
    def test_course_update_admin_no_teacherId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程导师id不存在
    def test_course_update_admin_inexistence_teacherId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程购买有效期为负数
    def test_course_update_admin_minus_effectiveDays(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程购买有效期为小数
    def test_course_update_admin_decimals_effectiveDays(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程购买有效期为非数字
    def test_course_update_admin_error_effectiveDays(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程购买有效期为空
    def test_course_update_admin_no_effectiveDays(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程原价为负数
    def test_course_update_admin_minus_originalPrice(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程原价为非数字
    def test_course_update_admin_decimals_originalPrice(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程原价为空
    def test_course_update_admin_no_originalPrice(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程现价为负数
    def test_course_update_admin_minus_price(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程现价为非数字
    def test_course_update_admin_error_price(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程现价为空
    def test_course_update_admin_no_price(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程status传入不符合的数据类型
    def test_course_update_admin_error_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程status为空
    def test_course_update_admin_no_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程排序为负数
    def test_course_update_admin_minus_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程排序为小数
    def test_course_update_admin_decimals_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程排序为非数字
    def test_course_update_admin_error_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程排序为空
    def test_course_update_admin_no_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程地域为空
    def test_course_update_admin_no_region(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程地域id不存在
    def test_course_update_admin_inexistence_region(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程标签id为空
    def test_course_update_admin_no_label(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程标签id不存在
    def test_course_update_admin_inexistence_label(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程传入不存在的courseId
    def test_course_update_admin_inexistence_courseId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #课程列表
    def test_course_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #id搜索课程列表
    def test_course_list_admin_by_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #key搜索课程列表
    def test_course_list_admin_by_key(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #startTime搜索课程列表
    def test_course_list_admin_by_startTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #endTime搜索课程列表
    def test_course_list_admin_by_endTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #分页显示课程列表
    def test_course_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按cityId搜索课程列表
    def test_course_list_admin_by_cityId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按status搜索课程列表
    def test_course_list_admin_by_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按时间搜索课程列表，结束时间早于开始时间
    def test_course_list_admin_by_error_time(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按status搜索课程列表,status传入不符合的数据类型
    def test_course_list_admin_by_error_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #课程详情
    def test_course_detail_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #课程详情，courseId不存在
    def test_course_detail_admin_inexistence_courseId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除课程
    def test_course_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除课程，courseId不存在
    def test_course_del_admin_inexistence_courseId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲
    def test_syllabus_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲,courseId不存在
    def test_syllabus_add_admin_inexistence_courseId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲大纲标题为空
    def test_syllabus_add_admin_no_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲大纲标题为41个字符
    def test_syllabus_add_admin_out_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲，index为负数
    def test_syllabus_add_admin_minus_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲，index为小数
    def test_syllabus_add_admin_decimals_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲，index为非整型
    def test_syllabus_add_admin_error_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲，index为空
    def test_syllabus_add_admin_no_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除课程大纲
    def test_syllabus_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除课程大纲，courseId不存在
    def test_syllabus_del_admin_inexistence_courseId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除课程大纲，courseId为空
    def test_syllabus_del_admin_no_courseId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除课程大纲，ids为空
    def test_syllabus_del_admin_no_ids(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除课程大纲，ids不存在
    def test_syllabus_del_admin_inexistence_ids(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程大纲
    def test_syllabus_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #课程下大纲列表
    def test_syllabus_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #课程下大纲列表，courseId不存在
    def test_syllabus_list_admin_inexistence_courseId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #课程下大纲列表，courseId为空
    def test_syllabus_list_admin_no_courseId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲下课时
    def test_syllabus_add_item_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲下课时，courseId不存在
    def test_syllabus_add_item_admin_inexistence_courseId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲下课时，courseId为空
    def test_syllabus_add_item_admin_no_courseId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲下课时，syllabusId不存在
    def test_syllabus_add_item_admin_inexistence_syllabusId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲下课时，syllabusId为空
    def test_syllabus_add_item_admin_no_syllabusId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲下课时，课时id不存在
    def test_syllabus_add_item_admin_inexistence_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲下课时，课时id为空
    def test_syllabus_add_item_admin_no_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲下课时，index为负数
    def test_syllabus_add_item_admin_minus_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲下课时，index为小数
    def test_syllabus_add_item_admin_decimals_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲下课时，index为非整型
    def test_syllabus_add_item_admin_error_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲下课时，index为空
    def test_syllabus_add_item_admin_no_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增课程大纲下重复的课时
    def test_syllabus_add_item_admin_repetition_item(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除课程大纲下课时
    def test_syllabus_del_item_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除课程大纲下课时,courseId不存在
    def test_syllabus_del_item_admin_inexistence_courseId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除课程大纲下课时,syllabusId不存在
    def test_syllabus_del_item_admin_inexistence_syllabusId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除课程大纲下课时,itemId不存在
    def test_syllabus_del_item_admin_inexistence_itemId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改课程大纲下课时
    def test_syllabus_update_item_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改不存在的课程大纲下课时
    def test_syllabus_update_item_admin_inexistence_itemId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #大纲下课时列表
    def test_syllabus_list_item_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #大纲下课时列表传入不存在的课程id
    def test_syllabus_list_item_admin_inexistence_courseId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #大纲下课时列表传入不存在的课程大纲id
    def test_syllabus_list_item_admin_inexistence_syllabusId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #
    def test_form(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增线下直播课时
    def test_item_add_admin_onlive(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时,title为空
    def test_item_add_admin_onlive_no_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时,title为41个字符
    def test_item_add_admin_onlive_out_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时,index为负数
    def test_item_add_admin_onlive_minus_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时,index为小数
    def test_item_add_admin_onlive_decimals_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时,index为非整型
    def test_item_add_admin_onlive_error_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时,index为空
    def test_item_add_admin_onlive_no_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时，描述为空
    def test_item_add_admin_onlive_no_desc(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时,isTryPlay传入不符合的数据类型
    def test_item_add_admin_onlive_error_isTryPlay(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时,isTryPlay为空
    def test_item_add_admin_onlive_no_isTryPlay(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时，programNum为空
    def test_item_add_admin_onlive_no_programNum(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时，programNum为已存在
    def test_item_add_admin_onlive_exist_programNum(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时，isLive为传入不符合的数据类型
    def test_item_add_admin_onlive_error_isLive(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时，isLive为空
    def test_item_add_admin_onlive_no_isLive(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时，status为传入不符合的数据类型
    def test_item_add_admin_onlive_error_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时，status为空
    def test_item_add_admin_onlive_no_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时，结束时间早于开始时间
    def test_item_add_admin_onlive_error_time(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时，开始时间为空
    def test_item_add_admin_onlive_no_startTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时，结束时间为空
    def test_item_add_admin_onlive_no_endTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时，isOffline传入不符合的数据类型
    def test_item_add_admin_onlive_error_isOffline(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时，isOffline为空
    def test_item_add_admin_onlive_no_isOffline(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线下直播课时，isOffline为False时，其他字段是否能为空
    def test_item_add_admin_onlive_if_isOffline_false(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线上直播课时，直播线上地址为空
    def test_item_add_admin_onlive_no_address(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线上直播课时，直播地址为空
    def test_item_add_admin_onlive_no_url(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线上直播课时，地址经度为空
    def test_item_add_admin_onlive_no_longitude(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线上直播课时，地址纬度为空
    def test_item_add_admin_onlive_no_latitude(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线上直播课时，报名人数为负数
    def test_item_add_admin_onlive_minus_offlinenumber(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线上直播课时，报名人数为小数
    def test_item_add_admin_onlive_decimals_offlinenumber(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线上直播课时，报名人数为非整型
    def test_item_add_admin_onlive_error_offlinenumber(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线上直播课时，报名人数为空
    def test_item_add_admin_onlive_no_offlinenumber(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增线上直播课时
    def test_item_add_admin_offlive(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增录播课时
    def test_item_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增录播课时，videoUrl为空
    def test_item_add_admin_no_videoUrl(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增录播课时，subtitle为空
    def test_item_add_admin_no_subtitle(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增录播课时，audio为空
    def test_item_add_admin_no_audio(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增录播课时，txtUrl为空
    def test_item_add_admin_no_txtUrl(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增录播课时，titleUrl为空
    def test_item_add_admin_no_titleUrl(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增录播课时，tratlerUrl为空
    def test_item_add_admin_no_tratlerUrl(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增录播课时，length为空
    def test_item_add_admin_no_length(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增录播课时，length为负数
    def test_item_add_admin_minus_length(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增录播课时，length为小数
    def test_item_add_admin_decimals_length(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增录播课时，length为非整型
    def test_item_add_admin_error_length(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #修改课时
    def test_item_update_admin_onlive(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时,title为空
    def test_item_update_admin_onlive_no_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #修改线下直播课时,title为41个字符
    def test_item_update_admin_onlive_out_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("courseItemDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #修改线下直播课时,index为负数
    def test_item_update_admin_onlive_minus_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时,index为小数
    def test_item_update_admin_onlive_decimals_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时,index为非整型
    def test_item_update_admin_onlive_error_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时,index为空
    def test_item_update_admin_onlive_no_index(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时，描述为空
    def test_item_update_admin_onlive_no_desc(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时,isTryPlay传入不符合的数据类型
    def test_item_update_admin_onlive_error_isTryPlay(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时,isTryPlay为空
    def test_item_update_admin_onlive_no_isTryPlay(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时，programNum为空
    def test_item_update_admin_onlive_no_programNum(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时，programNum为已存在
    def test_item_update_admin_onlive_exist_programNum(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时，isLive为传入不符合的数据类型
    def test_item_update_admin_onlive_error_isLive(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时，isLive为空
    def test_item_update_admin_onlive_no_isLive(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时，status为传入不符合的数据类型
    def test_item_update_admin_onlive_error_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时，status为空
    def test_item_update_admin_onlive_no_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时，结束时间早于开始时间
    def test_item_update_admin_onlive_error_time(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时，开始时间为空
    def test_item_update_admin_onlive_no_startTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时，结束时间为空
    def test_item_update_admin_onlive_no_endTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时，isOffline传入不符合的数据类型
    def test_item_update_admin_onlive_error_isOffline(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时，isOffline为空
    def test_item_update_admin_onlive_no_isOffline(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线下直播课时，isOffline为False时，其他字段是否能为空
    def test_item_update_admin_onlive_if_isOffline_false(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线上直播课时，直播线上地址为空
    def test_item_update_admin_onlive_no_updateress(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线上直播课时，直播地址为空
    def test_item_update_admin_onlive_no_url(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线上直播课时，地址经度为空
    def test_item_update_admin_onlive_no_longitude(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线上直播课时，地址纬度为空
    def test_item_update_admin_onlive_no_latitude(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线上直播课时，报名人数为负数
    def test_item_update_admin_onlive_minus_offlinenumber(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线上直播课时，报名人数为小数
    def test_item_update_admin_onlive_decimals_offlinenumber(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线上直播课时，报名人数为非整型
    def test_item_update_admin_onlive_error_offlinenumber(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线上直播课时，报名人数为空
    def test_item_update_admin_onlive_no_offlinenumber(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改线上直播课时
    def test_item_update_admin_offlive(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改录播课时
    def test_item_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改录播课时，videoUrl为空
    def test_item_update_admin_no_videoUrl(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改录播课时，subtitle为空
    def test_item_update_admin_no_subtitle(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改录播课时，audio为空
    def test_item_update_admin_no_audio(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改录播课时，txtUrl为空
    def test_item_update_admin_no_txtUrl(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改录播课时，titleUrl为空
    def test_item_update_admin_no_titleUrl(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改录播课时，tratlerUrl为空
    def test_item_update_admin_no_tratlerUrl(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改录播课时，length为空
    def test_item_update_admin_no_length(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改录播课时，length为负数
    def test_item_update_admin_minus_length(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改录播课时，length为小数
    def test_item_update_admin_decimals_length(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改录播课时，length为非整型
    def test_item_update_admin_error_length(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除课时
    def test_item_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除的课时不存在
    def test_item_del_admin_inexistence_item(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #课时列表
    def test_item_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #id搜索课时列表
    def test_item_list_admin_by_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #搜索课时列表，isNeedEnroll为空
    def test_item_list_admin_by_no_isNeedEnroll(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #搜索课时列表，isNeedEnroll传入不符合的数据类型
    def test_item_list_admin_by_error_isNeedEnrol(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #key搜索课时列表
    def test_item_list_admin_by_key(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #isOffline搜索课时列表
    def test_item_list_admin_by_isOffline(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按搜索课时列表传入不符合的数据类型
    def test_item_list_admin_by_error_isOffline(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #搜索课时列表，按节目号搜索
    def test_item_list_admin_by_programNum(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #type搜索课时列表
    def test_item_list_admin_by_type(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按type搜索课时列表，传入不符合的数据类型
    def test_item_list_admin_by_error_type(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #status搜索课时列表
    def test_item_list_admin_by_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #status搜索课时列表，传入不符合的数据类型
    def test_item_list_admin_by_error_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #startTime搜索课时列表
    def test_item_list_admin_by_startTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #endTime搜索课时列表
    def test_item_list_admin_by_endTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按时间范围搜索课时列表，结束时间早于开始时间
    def test_item_list_admin_by_error_Time(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #分页显示课时列表
    def test_item_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #课时详情
    def test_item_detail_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #课时详情,传入不存在的课时id
    def test_item_detail_admin_inexistence_itemId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #版本信息列表
    def test_version_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #startTime版本信息列表
    def test_version_list_admin_by_startTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #endTime版本信息列表
    def test_version_list_admin_by_endTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #搜索版本信息列表，结束时间早于开始时间
    def test_version_list_admin_by_error_time(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按id搜索版本信息列表
    def test_version_list_admin_by_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #版本信息列表分页显示
    def test_version_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #版本详情
    def test_version_detail_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #查看版本详情，传入不存在的版本id
    def test_version_detail_admin_no_versionId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加版本信息
    def test_version_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加版本信息，版本信息为21个字符
    def test_version_add_admin_out_versionNumber(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加版本信息，版本信息为空
    def test_version_add_admin_no_versionNumber(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加版本信息，最大版本信息为21个字符
    def test_version_add_admin_out_maxVersionNumber(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加版本信息，最大版本信息为空
    def test_version_add_admin_no_maxVersionNumber(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加版本信息，版本内容为空
    def test_version_add_admin_no_versionContent(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加版本信息，版本内容为201个字符
    def test_version_add_admin_out_versionContent(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加版本信息，下载地址为空
    def test_version_add_admin_no_versionUrl(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加版本信息，平台类型为空
    def test_version_add_admin_no_versionPlatform(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加版本信息，平台类型传入不符合的数据类型
    def test_version_add_admin_error_versionPlatform(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改版本信息
    def test_version_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除版本信息
    def test_version_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除的版本信息不存在
    def test_version_del_admin_inexistence_versionId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除版本信息id为空
    def test_version_del_admin_no_ids(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除版本信息，isLogic传入不符合的数据类型
    def test_version_del_admin_error_isLogic(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除版本信息，isLogic为空
    def test_version_del_admin_no_isLogic(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #播放记录列表
    def test_playRecord_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #account搜索播放记录列表
    def test_playRecord_list_admin_by_accountId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #播放记录Id搜索播放记录列表
    def test_playRecord_list_admin_by_Id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #type搜索播放记录列表
    def test_playRecord_list_admin_by_type(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按type搜索播放记录列表，传入不符合的数据类型
    def test_playRecord_list_admin_by_error_type(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #startTime搜索播放记录列表
    def test_playRecord_list_admin_by_startTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #endTime搜索播放记录列表
    def test_playRecord_list_admin_by_endTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按时间范围搜索播放记录列表，结束时间早于开始时间
    def test_playRecord_list_admin_by_error_time(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #分页显示播放记录列表
    def test_playRecord_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除播放记录
    def test_playRecord_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除的播放记录不存在
    def test_playRecord_del_admin_inexistence_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除播放记录,ids为空
    def test_playRecord_del_admin_no_ids(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除播放记录,isLogic传入不符合的数据类型
    def test_playRecord_del_admin_error_isLogic(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除播放记录,isLogic为空
    def test_playRecord_del_admin_no_isLogic(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #消息列表
    def test_message_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #消息列表按消息类型搜索
    def test_message_list_admin_by_messageType(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #消息列表按消息类型搜索，消息类型传递不符合的数据类型
    def test_message_list_admin_by_error_messageType(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #消息列表分页显示
    def test_message_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #消息列表按发布开始时间搜索
    def test_message_list_admin_by_starttime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #消息列表按发布结束时间搜索
    def test_message_list_admin_by_endtime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #消息列表按时间范围搜索，结束时间早于开始时间
    def test_message_list_admin_by_error_time(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #消息列表按关键字搜索
    def test_message_list_admin_by_key(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #消息列表按关键字搜索，关键字41个字符
    def test_message_list_admin_by_out_key(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #消息列表按id搜索
    def test_message_list_admin_by_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #消息列表按发送状态搜索
    def test_message_list_admin_by_sendStatus(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #消息列表按发送状态搜索,发送状态传递不符合的数据类型
    def test_message_list_admin_by_error_sendStatus(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #消息详情
    def test_message_detail_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #消息详情，传入不存在的消息Id
    def test_message_detail_admin_inexistence_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加消息
    def test_message_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改消息
    def test_message_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除消息
    def test_message_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—国级
    def test_region_add_country(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("regionDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增地域—国级，title为41个字符
    def test_region_add_country_out_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("regionDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增地域—国级，title为空
    def test_region_add_country_no_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("regionDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增地域—国级，desc为201个字符
    def test_region_add_country_out_desc(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("regionDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增地域—国级，desc为空
    def test_region_add_country_no_desc(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("regionDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增地域—国级，type传递不符合的数据类型
    def test_region_add_country_error_type(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("regionDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增地域—国级，type为空
    def test_region_add_country_no_type(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
        try:
            db=getdb.mongodb()
            db.db_drop("regionDocument", {"_id":ObjectId("%s" %response['data']['id'])})
        except Exception as e:
            print '%s' %e
            pass
    #新增地域—省级
    def test_region_add_province(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—省级，title为41个字符
    def test_region_add_province_out_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—省级，title为空
    def test_region_add_province_no_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—省级，desc为201个字符
    def test_region_add_province_out_desc(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—省级，desc为空
    def test_region_add_province_no_desc(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—省级，type传递不符合的数据类型
    def test_region_add_province_error_type(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—省级，type为空
    def test_region_add_province_no_type(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—省级，父级id不存在
    def test_region_add_province_inexistence_partentId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—省级，父级id为空
    def test_region_add_province_no_partentId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—省级，status传递不符合的数据类型
    def test_region_add_province_error_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—省级，status为空
    def test_region_add_province_no_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—省级，isrecom传递不符合的数据类型
    def test_region_add_province_error_isrecom(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—省级，isrecom为空
    def test_region_add_province_no_isrecom(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—市级
    def test_region_add_city(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—市级，title为41个字符
    def test_region_add_city_out_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—市级，title为空
    def test_region_add_city_no_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—市级，desc为201个字符
    def test_region_add_city_out_desc(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—市级，desc为空
    def test_region_add_city_no_desc(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—市级，type传递不符合的数据类型
    def test_region_add_city_error_type(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—市级，type为空
    def test_region_add_city_no_type(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—市级，父级id不存在
    def test_region_add_city_inexistence_partentId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—市级，父级id为空
    def test_region_add_city_no_partentId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—市级，status传递不符合的数据类型
    def test_region_add_city_error_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—市级，status为空
    def test_region_add_city_no_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—市级，isrecom传递不符合的数据类型
    def test_region_add_city_error_isrecom(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增地域—市级，isrecom为空
    def test_region_add_city_no_isrecom(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除地域--市级
    def test_region_del_admin_city(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除地域--市级，市级ID不存在
    def test_region_del_admin_inexistence_city(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除地域--省级
    def test_region_del_admin_province(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除地域--省级，省级Id不存在
    def test_region_del_admin_inexistence_province(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除地域--国级
    def test_region_del_admin_country(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除地域--国级，国际id不存在
    def test_region_del_admin_inexistence_country(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除地域，id为空
    def test_region_del_admin_no_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除地域，type为空
    def test_region_del_admin_no_type(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除地域，type传入不符合的数据类型
    def test_region_del_admin_error_type(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除地域，isLogic传入不符合的数据类型
    def test_region_del_admin_error_isLogic(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除地域，isLogic为空
    def test_region_del_admin_no_isLogic(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改地域
    def test_region_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改地域，id不存在
    def test_region_update_admin_inexistence_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改地域，id为空
    def test_region_update_admin_no_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改地域，type为空
    def test_region_update_admin_no_type(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改地域，type传入不符合的数据类型
    def test_region_update_admin_error_type(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改地域，title传入41个字符
    def test_region_update_admin_out_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改地域，title为空
    def test_region_update_admin_no_title(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改地域，desc为空
    def test_region_update_admin_no_desc(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改地域，desc传入201个字符
    def test_region_update_admin_out_desc(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改地域，isrecom传入不符合的数据类型
    def test_region_update_admin_error_isrecom(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改地域，isrecom为空
    def test_region_update_admin_no_isrecom(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改地域，status传入不符合的数据类型
    def test_region_update_admin_error_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改地域，status为空
    def test_region_update_admin_no_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #地域列表
    def test_region_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #id搜索地域列表
    def test_region_list_admin_by_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #key搜索地域列表
    def test_region_list_admin_by_key(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #分页显示地域列表
    def test_region_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按开始时间搜索地域列表
    def test_region_list_admin_by_starttime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按结束时间搜索地域列表
    def test_region_list_admin_by_endtime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按时间范围搜索地域列表，结束时间早于开始时间
    def test_region_list_admin_by_error_time(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除接口记录
    def test_requestrecord_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #接口记录列表
    def test_requestrecord_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #接口记录列表按接口id搜索
    def test_requestrecord_list_admin_by_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #接口记录列表按请求用户id搜索
    def test_requestrecord_list_admin_by_accountId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #接口记录列表按开始时间搜索
    def test_requestrecord_list_admin_by_startTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #接口记录列表按结束时间搜索
    def test_requestrecord_list_admin_by_endTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #接口记录列表分页显示
    def test_requestrecord_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增首页内置静态页面
    def test_templet_add_index_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增讲堂内置静态页面
    def test_templet_add_forum_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增我的内置静态页面
    def test_templet_add_my_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除内置静态页面
    def test_templet_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取内置静态页面
    def test_templet_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取首页内置静态页面
    def test_templet_index_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取讲堂内置静态页面
    def test_templet_forum_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #获取my内置静态页面
    def test_templet_my_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按startTime获取内置静态页面
    def test_templet_list_admin_by_startTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #按endTime获取my内置静态页面
    def test_templet_list_admin_by_endTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #上传course图片
    def test_img_upload_by_course(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #上传forum图片
    def test_img_upload_by_forum(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加广告
    def test_ad_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #广告详情
    def test_ad_details_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改广告
    def test_ad_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #广告列表
    def test_ad_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #广告列表按关键字搜索
    def test_ad_list_admin_by_key(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #广告列表按开始时间搜索
    def test_ad_list_admin_by_startTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #广告列表按结束时间搜索
    def test_ad_list_admin_by_endTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除广告
    def test_ad_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #消息用途类型列表
    def test_usetype_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #消息用途类型列表按关键字搜索
    def test_usetype_list_admin_by_key(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增消息用途类型
    def test_usetype_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改消息用途类型
    def test_usetype_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除消息用途类型
    def test_usetype_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #消息接收对象类型列表
    def test_receivetype_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增消息接收对象类型
    def test_receivetype_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除消息接收对象类型
    def test_receivetype_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #短信模板列表
    def test_duanxin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增短信模板
    def test_add_duanxin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #二维码用途类型列表
    def test_qrcodeuse_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #二维码用途类型列表按关键字搜索
    def test_qrcodeuse_list_admin_by_key(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增二维码用途类型
    def test_qrcodeuse_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改二维码用途类型
    def test_qrcodeuse_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除二维码用途类型
    def test_qrcodeuse_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #二维码所属模块列表
    def test_qrcodeobject_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #二维码所属模块列表按关键字搜索
    def test_qrcodeobject_list_admin_by_key(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #新增二维码所属模块
    def test_qrcodeobject_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改二维码所属模块
    def test_qrcodeobject_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除二维码所属模块
    def test_qrcodeobject_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #配置项查看
    def test_setting_detail_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #设置配置项
    def test_setting_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改配置项
    def test_setting_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除配置项
    def test_setting_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #搜索授信码列表
    def test_creditcode_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #num搜索授信码列表
    def test_creditcode_list_admin_by_num(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #isUsed搜索授信码列表
    def test_creditcode_list_admin_by_isUsed(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #useTimeStart搜索授信码列表
    def test_creditcode_list_admin_by_useTimeStart(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #useTimeEnd搜索授信码列表
    def test_creditcode_list_admin_by_useTimeEnd(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #分页显示授信码列表
    def test_creditcode_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #授信码详情
    def test_creditcode_detail_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除授信码
    def test_creditcode_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #订单列表
    def test_order_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #accountId搜索订单列表
    def test_order_list_admin_by_accountId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #num搜索订单列表
    def test_order_list_admin_by_num(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #payTimeStart搜索订单列表
    def test_order_list_admin_by_payTimeStart(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #payTimeEnd搜索订单列表
    def test_order_list_admin_by_payTimeEnd(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #objectType搜索订单列表
    def test_order_list_admin_by_objectType(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #productName搜索订单列表
    def test_order_list_admin_by_productName(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #payStatus搜索订单列表
    def test_order_list_admin_by_payStatus(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #priceStart搜索订单列表
    def test_order_list_admin_by_priceStart(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #priceEnd搜索订单列表
    def test_order_list_admin_by_priceEnd(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #分页显示订单列表
    def test_order_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #订单详情
    def test_order_detail_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改订单
    def test_order_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除订单
    def test_order_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #增加支付方式
    def test_paychannels_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改支付方式
    def test_paychannels_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除支付方式
    def test_paychannels_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #支付方式列表
    def test_paychannels_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #name搜索支付方式列表
    def test_paychannels_list_admin_by_name(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #分页显示支付方式列表
    def test_paychannels_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #支付方式详情
    def test_paychannels_detail_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #增加优惠券
    def test_coupon_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #修改优惠券
    def test_coupon_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #优惠券列表
    def test_coupon_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #优惠券列表按码值搜索
    def test_coupon_list_admin_by_couponCode(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #优惠券列表按优惠券名称搜索
    def test_coupon_list_admin_by_name(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #优惠券列表按有效起始时间搜索
    def test_coupon_list_admin_by_validStartTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #优惠券列表按有效截止时间搜索
    def test_coupon_list_admin_by_validEndTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #优惠券列表按状态搜索
    def test_coupon_list_admin_by_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #优惠券列表分页显示
    def test_coupon_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #优惠券详情
    def test_coupon_detail_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除优惠券
    def test_coupon_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户优惠券列表
    def test_coupon_accout_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户优惠券列表按用户accountId搜索
    def test_coupon_accout_list_admin_by_accountId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户优惠券列表按优惠券Id搜索
    def test_coupon_accout_list_admin_by_couponId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户优惠券列表按码值搜索
    def test_coupon_accout_list_admin_by_couponCode(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户优惠券列表按优惠券名称搜索
    def test_coupon_accout_list_admin_by_couponName(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户优惠券列表按领取时间范围搜索
    def test_coupon_accout_list_admin_by_time(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户优惠券列表按使用状态搜索
    def test_coupon_accout_list_admin_by_isUsed(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户优惠券列表按来源搜索
    def test_coupon_accout_list_admin_by_source(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户优惠券列表分页显示
    def test_coupon_accout_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户优惠券详情
    def test_coupon_accout_detail_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除用户的优惠券
    def test_coupon_accountCouponDel_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #优惠券套餐列表
    def test_coupon_package_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #优惠券套餐列表按套餐Id搜索
    def test_coupon_package_list_admin_by_packageId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #优惠券套餐列表按套餐名称搜索
    def test_coupon_package_list_admin_by_name(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #优惠券套餐列表按时间范围搜索
    def test_coupon_package_list_admin_by_time(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #优惠券套餐列表按状态搜索
    def test_coupon_package_list_admin_by_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #优惠券套餐列表分页显示
    def test_coupon_package_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #优惠券套餐详情
    def test_coupon_package_detail_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #添加优惠券套餐
    def test_coupon_package_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #更新优惠券套餐
    def test_coupon_package_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除优惠券套餐
    def test_couponPackage_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #系统发放优惠券套餐列表
    def test_coupon_grantPackage_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #系统发放优惠券套餐列表按套餐消息Id搜索
    def test_coupon_grantPackage_list_admin_by_grantPackageId(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #系统发放优惠券套餐列表按套餐名称搜索
    def test_coupon_grantPackage_list_admin_by_name(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #系统发放优惠券套餐列表按时间范围搜索
    def test_coupon_grantPackage_list_admin_by_time(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #系统发放优惠券套餐列表按状态搜索
    def test_coupon_grantPackage_list_admin_by_status(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #系统发放优惠券套餐列表分页显示
    def test_coupon_grantPackage_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #发放优惠券套餐
    def test_coupon_grantPackage_add_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #停止发放优惠券套餐
    def test_coupon_stopGrant_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除发放优惠券套餐
    def test_coupon_gantPackage_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #班主任购买的优惠券套餐列表
    def test_coupon_teacher_packages_list(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #班主任购买的优惠券套餐列表按id搜索
    def test_coupon_teacher_packages_list_admin_by_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #班主任购买的优惠券套餐列表按套餐名称搜索
    def test_coupon_teacher_packages_list_admin_by_packageName(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #班主任购买的优惠券套餐列表按购买时间范围搜索
    def test_coupon_teacher_packages_list_admin_by_time(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #班主任购买的优惠券套餐列表分页显示
    def test_coupon_teacher_packages_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #班主任购买的优惠券套餐详情
    def test_coupon_teacher_packages_detail_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除班主任购买的优惠券套餐
    def test_coupon_teacher_packages_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #报名列表信息
    def test_enroll_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #报名列表信息按id搜索
    def test_enroll_list_admin_by_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #报名列表信息按开始时间搜索
    def test_enroll_list_admin_by_startTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #报名列表信息按结束时间搜索
    def test_enroll_list_admin_by_endTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #报名列表信息分页显示
    def test_enroll_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #报名信息详情
    def test_enroll_detail_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除报名信息
    def test_enroll_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #虚拟账户信息列表
    def test_virtual_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #虚拟账户信息列表通过创建时间范围搜索
    def test_virtual_list_admin_by_startTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #虚拟账户信息列表分页显示
    def test_virtual_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #虚拟账户信息详情
    def test_virtual_detail_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除虚拟账户信息
    def test_virtual_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #流水记录信息列表
    def test_flowrecord_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #流水记录信息列表按id搜索
    def test_flowrecord_list_admin_by_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #流水记录信息列表按产生时间搜索
    def test_flowrecord_list_admin_by_startTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #流水记录信息列表按类型搜索
    def test_flowrecord_list_admin_by_type(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #流水记录信息列表分页显示
    def test_flowrecord_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #流水记录信息详情
    def test_flowrecord_detail_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除用户虚拟账户流水信息
    def test_flowrecord_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户M豆交易记录信息列表
    def test_mdeanrecord_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户M豆交易记录信息列表按id搜索
    def test_mdeanrecord_list_admin_by_id(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户M豆交易记录信息列表按产生时间搜索
    def test_mdeanrecord_list_admin_by_startTime(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户M豆交易记录信息列表按类型搜索
    def test_mdeanrecord_list_admin_by_type(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户M豆交易记录信息列表分页显示
    def test_mdeanrecord_list_admin_by_page(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #用户M豆交易记录信息详情
    def test_mdeanrecord_detail_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除账户用户M豆交易信息
    def test_mdeanrecord_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #媒体资源信息列表
    def test_videoresource_list_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #媒体资源信息详情
    def test_videoresource_detail_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #更新媒体资源信息
    def test_videoresource_update_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #删除媒体资源信息
    def test_videoresource_del_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #更新媒体资源标签信息
    def test_videoresource_update_admin1(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.post(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
    #根据节目获取对应的课时媒体资源URL
    def test_videoresource_get_by_programnum_admin(self):
        write=WriteExcel.Excel(Common.Path.case_Path())
        print '-----------------%s------------'%self.case_desc
        print '接口地址:%s' %self.url.encode('utf-8')
        print '传递参数:%s' %self.data.encode('utf-8')
        response,state = self.http.get(self.url, self.data, self.host)
        if {} == response:
            self.result = 'Error'
            print '返回的http状态:%s' %state
            try:
                if state ==200:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.NO_json
                elif state==400 and state==self.expect_http:
                    write.write_fail(self.case_id, 'Pass','Null',state)
                else:
                    write.write_fail(self.case_id, self.result,'Null',state)
                    raise Custom_exception.Request_fail
            except Exception as e:
                print('%s' % e)
                raise
            return
        try:
            # 断言
            self.assertEqual(response['code'], self.code, msg='返回的code不是%s\ncode=%s\nmsg=%s' %(self.code,response['code'].encode('utf-8'),response['msg'].encode('utf-8')))
            self.result = 'Pass'
            self.reason = 'Null'
        except AssertionError as e:
            self.result = 'Fail'
            self.reason = '%s' %e
            print self.reason
            try:
                write.write_fail(self.case_id, self.result, self.reason.decode('utf-8'),state)
            except Exception as e:
                print('%s' % e)
                raise
            raise
            # 更新结果表中的用例运行结果
        try:
            write.write(self.case_id, self.result,state)
        except Exception as e:
            print('%s' % e)
            raise
